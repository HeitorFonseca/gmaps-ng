{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p> about works </p>\"","import { Component, OnInit } from '@angular/core';\nimport { } from '@types/googlemaps';\nimport { ViewChild, ElementRef, NgZone } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<router-outlet></router-outlet>\\n<!-- <app-home></app-home> -->\\n<!-- <app-about></app-about> -->\"","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n  ngOnInit() {\n    \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { NguiMapModule} from '@ngui/map';\nimport { NguiAutoCompleteModule } from '@ngui/auto-complete';\n\nimport { AuthGuard } from './auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { \n        path: \"login\",\n        component: LoginComponent\n      },\n      { \n        path: \"about\",\n        component: AboutComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: \"\",\n        component: HomeComponent\n      }\n    ]),\n    NgbModule.forRoot(),    \n    NguiMapModule.forRoot({apiUrl: 'https://maps.google.com/maps/api/js?key=AIzaSyCVRKkMBanRLv3SJzkcc3XaYdGB-4q1_98&libraries=visualization,places,drawing'})\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService)\n  {\n    \n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.auth.isLoggedIn;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface myData {\n  success: boolean,\n  message: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loggedInStatus = false;\n\n  constructor(private http: HttpClient) { }\n\n  setLoggedIn(value: boolean) {\n    this.loggedInStatus = true;\n  }\n\n  get isLoggedIn()\n  {\n    return this.loggedInStatus;\n  }\n\n  getUserDetails(username, password) {\n    \n    return this.http.post('/api/auth.php', {\n      username, \n      password\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"  <div class = \\\"container\\\">\\n    <ngui-map #gmap zoom=\\\"8\\\"       [center]=\\\"mapProps.center\\\"    >\\n      <drawing-manager\\n        [drawingMode]=\\\"'polygon'\\\"\\n        [drawingControl]=\\\"true\\\"\\n        [drawingControlOptions]=\\\"{\\n          position: 2,\\n          drawingModes: ['circle', 'polygon', 'polyline', 'rectangle']\\n        }\\\"\\n        [circleOptions]=\\\"{\\n          fillColor: '#ffff00',\\n          fillOpacity: 1,\\n          strokeWeight: 5,\\n          editable: true,\\n          zIndex: 1\\n        }\\\">\\n      </drawing-manager>\\n    </ngui-map>\\n    \\n    selectedOverlay: {{selectedOverlay}} <br/>\\n    <p> Area: {{areaText}} <br/>\\n    <button (click)=\\\"deleteSelectedOverlay()\\\">Delete Selected Overlay</button>\\n</div>\\n\\n\\n<h1>Place Autocomplete Address Form</h1>\\n<input places-auto-complete (initialized$)=\\\"initialized($event)\\\" (place_changed)=\\\"placeChanged(place)\\\" [types]=\\\"['geocode']\\\"/>\\n<br/> \\naddress: {{address | json}}\\n\\n<p>\\n  <a routerLink = \\\"/login\\\">Login</a> \\n</p>\"","import { Component, ViewChild, OnInit, ElementRef, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { } from '@types/googlemaps';\nimport { DrawingManager } from '@ngui/map';\n\n@Component({\n  selector: 'app-home',\n  templateUrl:'./home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @ViewChild(DrawingManager) drawingManager: DrawingManager;\n  areaText: string = \"\";\n  selectedOverlay: any;\n  @ViewChild('search') public searchElement: ElementRef;\n  @ViewChild('gmap') public gmap: ElementRef;\n\n  autocomplete: google.maps.places.Autocomplete;\n  address: any = {};\n\n  mapProps: any = {\n    center: 'Recife',\n    zoom: 11\n  };\n\n  constructor(private ref: ChangeDetectorRef) { }\n\n  initialized(autocomplete: any) {\n    console.log(autocomplete);\n    this.autocomplete = autocomplete;\n  }\n\n  placeChanged() {\n    \n    let place = this.autocomplete.getPlace();\n    console.log(place);\n    \n    if (place.geometry === undefined || place.geometry === null) {\n      return;\n    }\n\n    for (var i = 0; i < place.address_components.length; i++) {\n      var addressType = place.address_components[i].types[0];\n      this.address[addressType] = place.address_components[i].long_name;\n    }\n\n    let la = place.geometry.location.lat();\n    let lb =  place.geometry.location.lng();\n\n    //this.gmap.nativeElement.setCenter(place.geometry.location.lat(), place.geometry.location.lng());\n\n    this.mapProps.center = new google.maps.LatLng(la, lb);\n\n    console.log(this.mapProps);\n\n    this.ref.detectChanges();\n  }\n\n  ngOnInit() {\n\n    console.log(\"this.searchElement\");\n    \n    this.drawingManager['initialized$'].subscribe(dm => {\n\n      google.maps.event.addListener(dm, 'overlaycomplete', event => {\n        if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n          dm.setDrawingMode(null);\n\n          google.maps.event.addListener(event.overlay, 'click', e => {\n            this.selectedOverlay = event.overlay;\n            this.selectedOverlay.setEditable(true);\n          });\n\n          this.selectedOverlay = event.overlay;\n          this.selectedOverlay.type = event.type;\n\n          var area = google.maps.geometry.spherical.computeArea(this.selectedOverlay.getPath());\n\n          this.areaText = this.SquareMetersToHectare(area).toString();\n        } \n      });      \n    });\n\n  }\n\n  deleteSelectedOverlay() {\n    if (this.selectedOverlay) {\n      this.selectedOverlay.setMap(null);\n      delete this.selectedOverlay;\n      this.areaText = \"\";\n    }\n  }\n\n  SquareMetersToHectare(area: any) : Number\n  {\n    return area/10000;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (submit)=\\\"LoginUserSubmit($event)\\\">\\n  <input type=\\\"text\\\" placeholder=\\\"Username\\\" id=\\\"username\\\" >\\n  <input type=\\\"password\\\" placeholder=\\\"Password\\\" id=\\\"password\\\" >\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" >\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private Auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  LoginUserSubmit(event)\n  {\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector('#username').value;\n    const password = target.querySelector('#password').value;\n    console.log(username, password);\n\n    this.Auth.getUserDetails(username, password).subscribe(data => {\n      // if(data.success){\n      //   this.router.navigate(['about']);\n      //   this.Auth.setLoggedIn(true);\n      // }\n      // else {\n      //   window.alert(data.message);\n      // }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}